name: Build and Upload Binaries

on:
  push:
    branches: [ main, test_workflow ]
  pull_request:
    branches: [ main, test_workflow ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: latest

      - name: Install Boost on Linux
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y libboost-all-dev
          fi
        shell: bash

      - name: Install Boost on macOS
        if: runner.os == 'macOS'
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh
          ./vcpkg/vcpkg install boost-multiprecision
        shell: bash

      - name: Configure CMake on macOS
        if: runner.os == 'macOS'
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake
        shell: bash

      - name: Install Boost on Windows
        if: runner.os == 'Windows'
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat
          .\vcpkg\vcpkg.exe install boost-multiprecision
        shell: pwsh

      - name: Configure CMake on Windows
        if: runner.os == 'Windows'
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=.\vcpkg\scripts\buildsystems\vcpkg.cmake
        shell: pwsh

      - name: Configure CMake on Linux
        run: | 
          if [ "${{ runner.os }}" == "Linux" ]; then
            cmake -S . -B build -DCMAKE_BUILD_TYPE=Release 
          fi
        shell: bash

      - name: Build Satsuma
        run: cmake --build build --config Release

      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          name: satsuma-${{ runner.os }}-binaries
          path: |
            build/*satsuma*
